version: '3.8'
networks:
  internal:
    x-vpc: InternalSubnets
secrets:
  KAFKA_CREDS:
    x-secrets:
      JsonKeys:
        - SecretKey: BOOTSTRAP_SERVERS
        - SecretKey: SASL_USERNAME
        - SecretKey: SASL_PASSWORD
        - SecretKey: SCHEMA_REGISTRY_URL
        - SecretKey: SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO
      Name: kafka/eu-west-1/lkc-a878or/kafdrop.prod
services:
  files-composer:
    environment:
      ECS_CONFIG_CONTENT: "\nfiles:\n  /app/kafka.properties:\n    content: |\n  \
        \    # Properties\n      ssl.endpoint.identification.algorithm=https\n   \
        \   sasl.mechanism=PLAIN\n      sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule\
        \ required username=\\\"{{ default | env_override('SASL_USERNAME') }}\\\"\
        \ password=\\\"{{ default | env_override('SASL_PASSWORD') }}\\\";\n      security.protocol=SASL_SSL\n\
        \      # EOF\n\n    mode: 644\n    context: jinja2\n\n  /app/start.sh:\n \
        \   content: |\n\n      echo ${!PWD}\n      echo {{ default | env_override('BOOTSTRAP_SERVERS')\
        \ }}\n      echo {{ default | env_override('SCHEMA_REGISTRY_URL') }}\n   \
        \   ls -l /app\n      cd /app\n      echo ${!PWD}\n\n      java --add-opens=java.base/sun.nio.ch=ALL-UNNAMED\
        \                                           \\\n        -jar /app/kafdrop.jar\
        \                                                                     \\\n\
        \        --kafka.brokerConnect={{ default | env_override('BOOTSTRAP_SERVERS')\
        \ }}                   \\\n        --schemaregistry.connect={{ default | env_override('SCHEMA_REGISTRY_URL')\
        \ }}              \\\n        --schemaregistry.auth={{ default | env_override('SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO')\
        \ }}\\\n        --topic.deleteEnabled=false                              \
        \                                 \\\n        --topic.createEnabled=false\n\
        \    mode: 755\n    context: jinja2\n\n  /app/kafdrop.jar:\n    source:\n\
        \      S3:\n        BucketName: files.compose-x.io\n        Key: app-demos/kafdrop/kafdrop-3.28.0-SNAPSHOT.jar\n\
        \    mode: 644\n\n  /etc/nginx/dhparam.pem:\n    source:\n      S3:\n    \
        \    BucketName: files.compose-x.io\n        Key: labs/files-composer/dhkeys/dhparam_9.pem\n\
        \    mode: 600\n\ncertificates:\n  x509:\n    /etc/nginx:\n      keyFileName:\
        \ nginx.key\n      certFileName: nginx.crt\n"
    secrets:
      - KAFKA_CREDS
    x-iam:
      PermissionsBoundary: ccoe/js-developer
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:GetObject*
                Effect: Allow
                Resource:
                  - arn:aws:s3:::files.compose-x.io/*
                Sid: GetAnyObjectFromAnywhere
            Version: '2012-10-17'
          PolicyName: S3GetAny
  kafdrop:
    environment:
      KAFDROP: ${ENV_NAME:-prod}
    secrets:
      - KAFKA_CREDS

x-acm:
  kafdrop-certs:
    MacroParameters:
      DomainNames:
        - kafdrop.prod.compose-x.io
x-cloudmap:
  PrivateNamespace:
    Lookup:
      RoleArn: ${PROD_RO_ROLE_ARN}
    Name: prod.compose-x.internal
x-cluster:
  Lookup:
    ClusterName: ${ENV_NAME:-prod}
x-elbv2:
  kafdrop-cc-scAlb:
    Listeners:
      - DefaultActions:
          - Redirect: HTTP_TO_HTTPS
        Port: 80
        Protocol: HTTP
      - Certificates:
          - x-acm: kafdrop-certs
        Port: 443
        Protocol: HTTPS
        SslPolicy: ELBSecurityPolicy-FS-1-2-Res-2020-10
        Targets:
          - access: /
            name: kafdrop:nginx
    MacroParameters:
      Ingress:
        ExtSources:
          - Description: ANY
            IPv4: 0.0.0.0/0
            Name: ANY
    Properties:
      Scheme: internet-facing
      Type: application
    Services:
      - healthcheck: 443:HTTPS:4:2:10:5:/actuator:200
        name: kafdrop:nginx
        port: 443
        protocol: HTTPS
    Settings:
      Subnets: PublicSubnets
x-route53:
  PublicZone:
    Lookup:
      RoleArn: ${PROD_RO_ROLE_ARN}
    Name: prod.compose-x.io
x-vpc:
  Lookup:
    AppSubnets:
      Tags:
        - vpc::usage: application
        - vpc::internal: 'false'
        - vpc::primary: 'true'
    InternalSubnets:
      Tags:
        - vpc::usage: application
        - vpc::internal: 'true'
        - vpc::primary: 'false'
    PublicSubnets:
      Tags:
        - vpc::usage: public
    StorageSubnets:
      Tags:
        - vpc::usage: storage
    VpcId:
      Tags:
        - Name: vpc--composex-prod
