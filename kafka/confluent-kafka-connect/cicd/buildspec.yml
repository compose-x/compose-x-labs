version: 0.2
env:
  shell: /bin/bash

phases:
  install:
    runtime-versions:
      java: corretto11
      python: 3.8
    commands:
      - if [ -z ${AWS_ACCOUNT_ID+x} ]; then AWS_ACCOUNT_ID=$(aws sts get-caller-identity | jq -r .Account); fi
      - REGISTRY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION:-$AWS_DEFAULT_REGION}.amazonaws.com/
      - (pip --version && pip install pip -U) || curl https://bootstrap.pypa.io/get-pip.py | python
      - pip install awscli docker-compose -U
      - pip install ecs_composex>=0.15.2
  pre_build:
    commands:
      - echo Login to own ECR registry
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${REGISTRY_URI}
      - COMMIT_HASH=${CODEBUILD_RESOLVED_SOURCE_VERSION::7}
      - EPOCH=`date +'%s'`
      - IMAGE_TAG=${COMMIT_HASH:=$EPOCH}
      - echo Docker repository $REPOSITORY_URI
      - echo Docker image tag $IMAGE_TAG
  build:
    commands:
      - docker-compose build
      - docker-compose push

  post_build:
    commands:
      - mkdir -p outputs/{dev,stg,prod} -p
      - ecs-compose-x create --format yaml -b ${CFN_TPL_BUCKET} -n ${DEPLOYMENT_NAME} -f docker-compose.yml -f aws -d outputs/dev/

artifacts:
  files:
    - "**/*"
  discard-paths: no
  base-directory: outputs
